version: '3.8'

services:
  db:
    image: postgres:16
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: lib
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    networks:
      - internal-net
#
#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    container_name: zookeeper
#    restart: always
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - "2181:2181"
#    networks:
#      - app_network
#
#  kafka:
#    image: confluentinc/cp-kafka:latest
#    container_name: kafka
#    restart: always
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    ports:
#      - "9092:9092"
#      - "29092:29092"
#    networks:
#      - app_network

  doctor-service:
    build: .
    container_name: doctor-service
    depends_on:
      - db
#      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/lib
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8092:8080"
    labels:
      - "prometheus.port=8080"
      - "prometheus.path=/actuator/prometheus"
    networks:
      - internal-net
      - kafka-network
      - prometheus-network

networks:
  internal-net:
    internal: true
  kafka-network:
    external: true
    name: kafka-network
  prometheus-network:
    external: true
    name: prometheus-network
